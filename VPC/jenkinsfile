pipeline{
    agent any

    parameters{
        choice(
            name: 'terraformAction',
            choices:['apply','destroy'],
            description:'choose your action to perform'
            )
    }
    
    environment{
        AWS_ACCESS_KEY = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

    stages{
        stage('Git checkout'){
            steps{
                dir('terraform'){
                        git branch: 'terraform',url:'https://github.com/OmkarKuratti/Devops_Practice.git'
                    }
                }
            }
        

        stage('Plan'){
            steps{
                dir('terraform/VPC'){
                    sh 'terraform init'
                    sh 'terraform plan -out tfplan'
                    sh 'terraform show -no-color tfplan >> tfplan.txt'
                }
            }
        }

        stage('Approval'){
            steps{
                script{
                    def plan = readFile ('terraform/VPC/tfplan.txt')
                    input(
                        message: "do you want to proceed with terraform ${params.terraformAction} action ... ?",
                        parameters: [
                            text(
                                name: 'plan',
                                description : 'can you please review your plan one more time',
                                defaultValue: plan
                                )
                            ]
                    )
                }
            }
        }

        stage('Apply or destroy'){
            when{
                expression{
                    return params.terraformAction == 'apply' || params.terraformAction == 'destroy'
                }
            }
            steps{
                dir('terraform/VPC'){
                    script{
                        if (params.terraformAction == 'apply'){
                            sh "terraform apply -input=false tfplan"
                        }else if (params.terraformAction == 'destroy'){
                            sh "terraform destroy -auto-approve"
                        }
                    }
                }
            }
        }
    }
}
